package redis_template

var RedisSingleTStr = `// Code generated by TX.
// Template: Redis DB Single Dao

package {{.RedisPackage}}
{{ if .RedisImports }}
import (
{{- range .RedisImports}}
    {{.}}
{{- end}}
){{end}}

//{{.TableName}}RedisKey gen{{.TableName}}Key 
func {{.TableName}}RedisKey({{.GormFieldsInputs}}) string {
    return {{.GormFieldsRedisKey}}
}
{{$structName := CamelizeStr .TableName .SystemName}}
///////////////////////{{.TableName}} Redis Single/////////////////////////////////////////////////////

func Del{{.TableName}}(info *{{.TypePackage}}.{{$structName}}) error {
    _client := {{.RedisClient}}
    return _client.Del(_client.Context(), {{.TableName}}RedisKey({{.GormGetFields "info"}})).Err()
}

func Set{{.TableName}}(info *{{.TypePackage}}.{{$structName}}, expiration time.Duration) error {
    _client := {{.RedisClient}}
    return _client.Set(_client.Context(), {{.TableName}}RedisKey({{.GormGetFields "info"}}), xjson.MarshalString(info.Get{{.TableName}}()), expiration).Err()
}

func Expire{{.TableName}}(info *{{.TypePackage}}.{{$structName}}, expiration time.Duration) error {
    _client := {{.RedisClient}}
    return _client.Expire(_client.Context(), {{.TableName}}RedisKey({{.GormGetFields "info"}}), expiration).Err()
}

func Get{{.TableName}}({{.GormFieldsInputs}}) (info *{{.TypePackage}}.{{$structName}}, err error) {
    _client := {{.RedisClient}}
    str, err := _client.Get(_client.Context(), {{.TableName}}RedisKey({{.GormFieldsValue}})).Result()
    if err == nil {
        info = {{.PoolPackage}}.Get{{$structName}}()
        if err = xjson.Unmarshal([]byte(str), info.Get{{.TableName}}()); err == nil {
            return info, nil
        }
        {{.PoolPackage}}.Put{{$structName}}(info)
    }
    return info, err
}

func Set{{.TableName}}List(infos []*{{.TypePackage}}.{{$structName}}) error {
    if len(infos) <= 0 {
        return errors.New("Set{{.TableName}}List len error")
    }
    _client := {{.RedisClient}}
    var _list []string
    for _, _info := range infos {
        _list = append(_list, {{.TableName}}RedisKey({{.GormGetFields "_info"}}))
        _list = append(_list, xjson.MarshalString(_info.Get{{.TableName}}()))
    }
    return _client.MSet(_client.Context(), _list).Err()
}

`
