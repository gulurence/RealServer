package db_template

var dataDirtyFlagsTemplateStr = `// Code generated by TX.
// Template: Data Template

package {{.TypePackage}}

import (
    "tx-common/xbitset"
    "tx-service/db"
)

type {{.SystemName}}DirtyFlag struct {
    DirtyFlags int64
    DBLogic    txdb.IDBLogic
}

func (df *{{.SystemName}}DirtyFlag) BindDBLogic(dbLogic txdb.IDBLogic) {
    df.DBLogic = dbLogic
}

func (df *{{.SystemName}}DirtyFlag) UnbindDBLogic(key int64) {
    if df.DBLogic != nil {
        df.DBLogic.DelUpdateKey(key)
        df.DBLogic = nil
    }
}

func (df *{{.SystemName}}DirtyFlag) ClearDirty(key int64) {
    df.DirtyFlags = 0
    if df.DBLogic != nil {
        df.DBLogic.DelUpdateKey(key)
    }
}

func (df *{{.SystemName}}DirtyFlag) setDirtyFlag(flag int, key int64) {
    if df.DBLogic != nil  {
        df.DBLogic.AddUpdateKey(key)
    }
    df.DirtyFlags = xbitset.AddBit(df.DirtyFlags, flag)
}

func (df *{{.SystemName}}DirtyFlag) HasDirtyFlag(flag int) bool {
    return xbitset.GetBit(df.DirtyFlags, flag)
}

func (df *{{.SystemName}}DirtyFlag) SetDelDirty(del bool, key int64) {
    if del {
        if df.DBLogic != nil {
            df.DBLogic.AddUpdateKey(key)
        }
        df.DirtyFlags = xbitset.AddBit(df.DirtyFlags, 63)
    } else {
        df.DirtyFlags = xbitset.CleanBit(df.DirtyFlags, 63)
    }
}
`
