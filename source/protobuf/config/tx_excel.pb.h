// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tx_excel.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_tx_5fexcel_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_tx_5fexcel_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "tx_base_excel.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_tx_5fexcel_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_tx_5fexcel_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_tx_5fexcel_2eproto;
namespace TX {
class constant_item;
struct constant_itemDefaultTypeInternal;
extern constant_itemDefaultTypeInternal _constant_item_default_instance_;
class tx_excels;
struct tx_excelsDefaultTypeInternal;
extern tx_excelsDefaultTypeInternal _tx_excels_default_instance_;
class tx_excels_ConstantMapEntry_DoNotUse;
struct tx_excels_ConstantMapEntry_DoNotUseDefaultTypeInternal;
extern tx_excels_ConstantMapEntry_DoNotUseDefaultTypeInternal _tx_excels_ConstantMapEntry_DoNotUse_default_instance_;
}  // namespace TX
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace TX {

// ===================================================================


// -------------------------------------------------------------------

class constant_item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TX.constant_item) */ {
 public:
  inline constant_item() : constant_item(nullptr) {}
  ~constant_item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR constant_item(::google::protobuf::internal::ConstantInitialized);

  inline constant_item(const constant_item& from)
      : constant_item(nullptr, from) {}
  constant_item(constant_item&& from) noexcept
    : constant_item() {
    *this = ::std::move(from);
  }

  inline constant_item& operator=(const constant_item& from) {
    CopyFrom(from);
    return *this;
  }
  inline constant_item& operator=(constant_item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const constant_item& default_instance() {
    return *internal_default_instance();
  }
  static inline const constant_item* internal_default_instance() {
    return reinterpret_cast<const constant_item*>(
               &_constant_item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(constant_item& a, constant_item& b) {
    a.Swap(&b);
  }
  inline void Swap(constant_item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(constant_item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  constant_item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<constant_item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const constant_item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const constant_item& from) {
    constant_item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(constant_item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "TX.constant_item";
  }
  protected:
  explicit constant_item(::google::protobuf::Arena* arena);
  constant_item(::google::protobuf::Arena* arena, const constant_item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVListFieldNumber = 3,
    kV3ListFieldNumber = 4,
    kV3List64FieldNumber = 5,
    kKvList32FieldNumber = 6,
    kIdFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // repeated int64 vList = 3;
  int vlist_size() const;
  private:
  int _internal_vlist_size() const;

  public:
  void clear_vlist() ;
  ::int64_t vlist(int index) const;
  void set_vlist(int index, ::int64_t value);
  void add_vlist(::int64_t value);
  const ::google::protobuf::RepeatedField<::int64_t>& vlist() const;
  ::google::protobuf::RepeatedField<::int64_t>* mutable_vlist();

  private:
  const ::google::protobuf::RepeatedField<::int64_t>& _internal_vlist() const;
  ::google::protobuf::RepeatedField<::int64_t>* _internal_mutable_vlist();

  public:
  // repeated .TX.v3int32 v3List = 4;
  int v3list_size() const;
  private:
  int _internal_v3list_size() const;

  public:
  void clear_v3list() ;
  ::TX::v3int32* mutable_v3list(int index);
  ::google::protobuf::RepeatedPtrField< ::TX::v3int32 >*
      mutable_v3list();
  private:
  const ::google::protobuf::RepeatedPtrField<::TX::v3int32>& _internal_v3list() const;
  ::google::protobuf::RepeatedPtrField<::TX::v3int32>* _internal_mutable_v3list();
  public:
  const ::TX::v3int32& v3list(int index) const;
  ::TX::v3int32* add_v3list();
  const ::google::protobuf::RepeatedPtrField< ::TX::v3int32 >&
      v3list() const;
  // repeated .TX.v3int64 v3List64 = 5;
  int v3list64_size() const;
  private:
  int _internal_v3list64_size() const;

  public:
  void clear_v3list64() ;
  ::TX::v3int64* mutable_v3list64(int index);
  ::google::protobuf::RepeatedPtrField< ::TX::v3int64 >*
      mutable_v3list64();
  private:
  const ::google::protobuf::RepeatedPtrField<::TX::v3int64>& _internal_v3list64() const;
  ::google::protobuf::RepeatedPtrField<::TX::v3int64>* _internal_mutable_v3list64();
  public:
  const ::TX::v3int64& v3list64(int index) const;
  ::TX::v3int64* add_v3list64();
  const ::google::protobuf::RepeatedPtrField< ::TX::v3int64 >&
      v3list64() const;
  // repeated .TX.kvint32 kvList32 = 6;
  int kvlist32_size() const;
  private:
  int _internal_kvlist32_size() const;

  public:
  void clear_kvlist32() ;
  ::TX::kvint32* mutable_kvlist32(int index);
  ::google::protobuf::RepeatedPtrField< ::TX::kvint32 >*
      mutable_kvlist32();
  private:
  const ::google::protobuf::RepeatedPtrField<::TX::kvint32>& _internal_kvlist32() const;
  ::google::protobuf::RepeatedPtrField<::TX::kvint32>* _internal_mutable_kvlist32();
  public:
  const ::TX::kvint32& kvlist32(int index) const;
  ::TX::kvint32* add_kvlist32();
  const ::google::protobuf::RepeatedPtrField< ::TX::kvint32 >&
      kvlist32() const;
  // string Id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // int32 value = 2;
  void clear_value() ;
  ::int32_t value() const;
  void set_value(::int32_t value);

  private:
  ::int32_t _internal_value() const;
  void _internal_set_value(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:TX.constant_item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 3,
      27, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<::int64_t> vlist_;
    mutable ::google::protobuf::internal::CachedSize _vlist_cached_byte_size_;
    ::google::protobuf::RepeatedPtrField< ::TX::v3int32 > v3list_;
    ::google::protobuf::RepeatedPtrField< ::TX::v3int64 > v3list64_;
    ::google::protobuf::RepeatedPtrField< ::TX::kvint32 > kvlist32_;
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::int32_t value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tx_5fexcel_2eproto;
};// -------------------------------------------------------------------

class tx_excels_ConstantMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          tx_excels_ConstantMapEntry_DoNotUse, std::string, ::TX::constant_item,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      tx_excels_ConstantMapEntry_DoNotUse, std::string, ::TX::constant_item,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  tx_excels_ConstantMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR tx_excels_ConstantMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit tx_excels_ConstantMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const tx_excels_ConstantMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const tx_excels_ConstantMapEntry_DoNotUse*>(
        &_tx_excels_ConstantMapEntry_DoNotUse_default_instance_);
  }
  static bool ValidateKey(std::string* s) {
    return ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(s->data(), static_cast<int>(s->size()), ::google::protobuf::internal::WireFormatLite::PARSE, "TX.tx_excels.ConstantMapEntry.key");
 }
  static bool ValidateValue(void*) { return true; }
  ::google::protobuf::Metadata GetMetadata() const final;
  friend struct ::TableStruct_tx_5fexcel_2eproto;
};
// -------------------------------------------------------------------

class tx_excels final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TX.tx_excels) */ {
 public:
  inline tx_excels() : tx_excels(nullptr) {}
  ~tx_excels() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR tx_excels(::google::protobuf::internal::ConstantInitialized);

  inline tx_excels(const tx_excels& from)
      : tx_excels(nullptr, from) {}
  tx_excels(tx_excels&& from) noexcept
    : tx_excels() {
    *this = ::std::move(from);
  }

  inline tx_excels& operator=(const tx_excels& from) {
    CopyFrom(from);
    return *this;
  }
  inline tx_excels& operator=(tx_excels&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const tx_excels& default_instance() {
    return *internal_default_instance();
  }
  static inline const tx_excels* internal_default_instance() {
    return reinterpret_cast<const tx_excels*>(
               &_tx_excels_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(tx_excels& a, tx_excels& b) {
    a.Swap(&b);
  }
  inline void Swap(tx_excels* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(tx_excels* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  tx_excels* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<tx_excels>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const tx_excels& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const tx_excels& from) {
    tx_excels::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(tx_excels* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "TX.tx_excels";
  }
  protected:
  explicit tx_excels(::google::protobuf::Arena* arena);
  tx_excels(::google::protobuf::Arena* arena, const tx_excels& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  enum : int {
    kConstantMapFieldNumber = 1,
  };
  // map<string, .TX.constant_item> constant_map = 1;
  int constant_map_size() const;
  private:
  int _internal_constant_map_size() const;

  public:
  void clear_constant_map() ;
  const ::google::protobuf::Map<std::string, ::TX::constant_item>& constant_map() const;
  ::google::protobuf::Map<std::string, ::TX::constant_item>* mutable_constant_map();

  private:
  const ::google::protobuf::Map<std::string, ::TX::constant_item>& _internal_constant_map() const;
  ::google::protobuf::Map<std::string, ::TX::constant_item>* _internal_mutable_constant_map();

  public:
  // @@protoc_insertion_point(class_scope:TX.tx_excels)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      33, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::MapField<tx_excels_ConstantMapEntry_DoNotUse, std::string, ::TX::constant_item,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        constant_map_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_tx_5fexcel_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// tx_excels

// map<string, .TX.constant_item> constant_map = 1;
inline int tx_excels::_internal_constant_map_size() const {
  return _internal_constant_map().size();
}
inline int tx_excels::constant_map_size() const {
  return _internal_constant_map_size();
}
inline void tx_excels::clear_constant_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.constant_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::TX::constant_item>& tx_excels::_internal_constant_map() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.constant_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::TX::constant_item>& tx_excels::constant_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:TX.tx_excels.constant_map)
  return _internal_constant_map();
}
inline ::google::protobuf::Map<std::string, ::TX::constant_item>* tx_excels::_internal_mutable_constant_map() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _impl_.constant_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::TX::constant_item>* tx_excels::mutable_constant_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:TX.tx_excels.constant_map)
  return _internal_mutable_constant_map();
}

// -------------------------------------------------------------------

// constant_item

// string Id = 1;
inline void constant_item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& constant_item::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TX.constant_item.Id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void constant_item::set_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:TX.constant_item.Id)
}
inline std::string* constant_item::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:TX.constant_item.Id)
  return _s;
}
inline const std::string& constant_item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_.Get();
}
inline void constant_item::_internal_set_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_.Set(value, GetArena());
}
inline std::string* constant_item::_internal_mutable_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* constant_item::release_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:TX.constant_item.Id)
  return _impl_.id_.Release();
}
inline void constant_item::set_allocated_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.id_.IsDefault()) {
          _impl_.id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:TX.constant_item.Id)
}

// int32 value = 2;
inline void constant_item::clear_value() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.value_ = 0;
}
inline ::int32_t constant_item::value() const {
  // @@protoc_insertion_point(field_get:TX.constant_item.value)
  return _internal_value();
}
inline void constant_item::set_value(::int32_t value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:TX.constant_item.value)
}
inline ::int32_t constant_item::_internal_value() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.value_;
}
inline void constant_item::_internal_set_value(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.value_ = value;
}

// repeated int64 vList = 3;
inline int constant_item::_internal_vlist_size() const {
  return _internal_vlist().size();
}
inline int constant_item::vlist_size() const {
  return _internal_vlist_size();
}
inline void constant_item::clear_vlist() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.vlist_.Clear();
}
inline ::int64_t constant_item::vlist(int index) const {
  // @@protoc_insertion_point(field_get:TX.constant_item.vList)
  return _internal_vlist().Get(index);
}
inline void constant_item::set_vlist(int index, ::int64_t value) {
  _internal_mutable_vlist()->Set(index, value);
  // @@protoc_insertion_point(field_set:TX.constant_item.vList)
}
inline void constant_item::add_vlist(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_vlist()->Add(value);
  // @@protoc_insertion_point(field_add:TX.constant_item.vList)
}
inline const ::google::protobuf::RepeatedField<::int64_t>& constant_item::vlist() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TX.constant_item.vList)
  return _internal_vlist();
}
inline ::google::protobuf::RepeatedField<::int64_t>* constant_item::mutable_vlist()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TX.constant_item.vList)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_vlist();
}
inline const ::google::protobuf::RepeatedField<::int64_t>& constant_item::_internal_vlist()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.vlist_;
}
inline ::google::protobuf::RepeatedField<::int64_t>* constant_item::_internal_mutable_vlist() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.vlist_;
}

// repeated .TX.v3int32 v3List = 4;
inline int constant_item::_internal_v3list_size() const {
  return _internal_v3list().size();
}
inline int constant_item::v3list_size() const {
  return _internal_v3list_size();
}
inline ::TX::v3int32* constant_item::mutable_v3list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:TX.constant_item.v3List)
  return _internal_mutable_v3list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::TX::v3int32>* constant_item::mutable_v3list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TX.constant_item.v3List)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_v3list();
}
inline const ::TX::v3int32& constant_item::v3list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TX.constant_item.v3List)
  return _internal_v3list().Get(index);
}
inline ::TX::v3int32* constant_item::add_v3list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::TX::v3int32* _add = _internal_mutable_v3list()->Add();
  // @@protoc_insertion_point(field_add:TX.constant_item.v3List)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::TX::v3int32>& constant_item::v3list() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TX.constant_item.v3List)
  return _internal_v3list();
}
inline const ::google::protobuf::RepeatedPtrField<::TX::v3int32>&
constant_item::_internal_v3list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.v3list_;
}
inline ::google::protobuf::RepeatedPtrField<::TX::v3int32>*
constant_item::_internal_mutable_v3list() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.v3list_;
}

// repeated .TX.v3int64 v3List64 = 5;
inline int constant_item::_internal_v3list64_size() const {
  return _internal_v3list64().size();
}
inline int constant_item::v3list64_size() const {
  return _internal_v3list64_size();
}
inline ::TX::v3int64* constant_item::mutable_v3list64(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:TX.constant_item.v3List64)
  return _internal_mutable_v3list64()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::TX::v3int64>* constant_item::mutable_v3list64()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TX.constant_item.v3List64)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_v3list64();
}
inline const ::TX::v3int64& constant_item::v3list64(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TX.constant_item.v3List64)
  return _internal_v3list64().Get(index);
}
inline ::TX::v3int64* constant_item::add_v3list64() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::TX::v3int64* _add = _internal_mutable_v3list64()->Add();
  // @@protoc_insertion_point(field_add:TX.constant_item.v3List64)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::TX::v3int64>& constant_item::v3list64() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TX.constant_item.v3List64)
  return _internal_v3list64();
}
inline const ::google::protobuf::RepeatedPtrField<::TX::v3int64>&
constant_item::_internal_v3list64() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.v3list64_;
}
inline ::google::protobuf::RepeatedPtrField<::TX::v3int64>*
constant_item::_internal_mutable_v3list64() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.v3list64_;
}

// repeated .TX.kvint32 kvList32 = 6;
inline int constant_item::_internal_kvlist32_size() const {
  return _internal_kvlist32().size();
}
inline int constant_item::kvlist32_size() const {
  return _internal_kvlist32_size();
}
inline ::TX::kvint32* constant_item::mutable_kvlist32(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:TX.constant_item.kvList32)
  return _internal_mutable_kvlist32()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::TX::kvint32>* constant_item::mutable_kvlist32()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:TX.constant_item.kvList32)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_kvlist32();
}
inline const ::TX::kvint32& constant_item::kvlist32(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:TX.constant_item.kvList32)
  return _internal_kvlist32().Get(index);
}
inline ::TX::kvint32* constant_item::add_kvlist32() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::TX::kvint32* _add = _internal_mutable_kvlist32()->Add();
  // @@protoc_insertion_point(field_add:TX.constant_item.kvList32)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::TX::kvint32>& constant_item::kvlist32() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:TX.constant_item.kvList32)
  return _internal_kvlist32();
}
inline const ::google::protobuf::RepeatedPtrField<::TX::kvint32>&
constant_item::_internal_kvlist32() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.kvlist32_;
}
inline ::google::protobuf::RepeatedPtrField<::TX::kvint32>*
constant_item::_internal_mutable_kvlist32() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.kvlist32_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace TX


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_tx_5fexcel_2eproto_2epb_2eh



