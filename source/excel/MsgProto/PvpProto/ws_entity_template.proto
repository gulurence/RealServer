syntax = "proto3";

option go_package = ".;ws_proto";

package ws_proto;



// Character对象类型
enum SceneEntityType {
  SceneEntity_Null     = 0;
  SceneEntity_Player   = 1; // 玩家
  SceneEntity_NPC      = 2; // NPC
  SceneEntity_Boss     = 3; // Boss
  SceneEntity_Monster  = 4; // 怪物
  SceneEntity_Transmit = 5; // 传送门
  SceneEntity_Box      = 6; // 宝箱
  
  SceneEntity_Skill    = 10; // 场景技能对象
  
  SceneEntity_MaxType  = 20;
}

// 对象状态
enum EntityStateType{
  EntityStateType_Null        = 0;
  EntityStateType_Vertigo     = 1; // 眩晕
  EntityStateType_Invincible  = 2; // 无敌
}
// 属性等级类型
enum AttributeLevelType{
  AttributeLevelType_First  = 0;
  AttributeLevelType_Second = 1;
  AttributeLevelType_Third  = 2;
}
// 一级属性枚举用于更新属性
enum FirstAttributeType{
  FirstAttributeType_Null     = 0;
  FirstAttributeType_MaxHp    = 1; // 
  FirstAttributeType_Hp       = 2; // 
  FirstAttributeType_Attack   = 3; // 
  FirstAttributeType_Defence  = 4; // 
  FirstAttributeType_Evade    = 5; // 
  FirstAttributeType_Cri      = 6; // 
}
// 二级属性枚举用于更新属性
enum SecondAttributeType{
  SecondAttributeType_Null    = 0;
  
}
// 三级属性枚举用于更新属性
enum ThirdAttributeType{
  ThirdAttributeType_Null       = 0;
  ThirdAttributeType_ConfigID   = 1;
  ThirdAttributeType_Level      = 2;
  ThirdAttributeType_Quality    = 3;
  ThirdAttributeType_Speed      = 4;
  ThirdAttributeType_PosX       = 5;
  ThirdAttributeType_PosY       = 6;
  ThirdAttributeType_BornPosX   = 7;
  ThirdAttributeType_BornPosY   = 8;  
  ThirdAttributeType_Character_ID = 9;
  ThirdAttributeType_NickName   = 10;
  ThirdAttributeType_Dir        = 11;
  ThirdAttributeType_HeadSkinID = 12;
  ThirdAttributeType_SkilID     = 13;
  ThirdAttributeType_TeamID     = 14;
  ThirdAttributeType_GroupID    = 15;
  ThirdAttributeType_Tag        = 16;

  // 技能创建 entity对象属性
  ThirdAttributeType_CreateEntityId = 17; // 创建者ID
  ThirdAttributeType_CreateTimeTick = 18; // 创建时间
  ThirdAttributeType_LifeTimeLen = 19;     // 存在时长 毫秒
  ThirdAttributeType_DelayCreateTimeLen = 20;     // 对象延迟创建时长 毫秒
}

enum BuffType{
  BuffType_Null         = 0;
  BuffType_Vertigo      = 1; // 晕眩 [1.总持续时长]
  BuffType_Sarcasm      = 2; // 嘲讽 [1.总持续时长]
  BuffType_Damage       = 3; // 伤害 [1.总持续时长, 2.延迟时长, 3.间隔时长, 4.总次数, [5.造成[1.物理,2.魔法,3.普攻攻击],[1.数值,2.百分比]伤害,【条件 1,默认,2.正面:100%,3.背面:150%,4.拥有buffs:150】[数值/百分比值] 伤害]]
  BuffType_Treatment    = 4; // 治疗 [1.总持续时长, 2.延迟时长, 3.间隔时长, 4.总次数, [5.造成[1.物理,2.魔法,3.普攻攻击],[1.数值,2.百分比]伤害,【条件 1,默认,2.正面:100%,3.背面:150%,4.拥有buffs:150】[数值/百分比值] 治疗 ]]
  BuffType_Attribute    = 5; // 属性 [1.增加，2减少][1.数值,2.百分比][3.值]]
}

enum MoveType{
  MoveType_Null         = 0;
  MoveType_StartMove    = 1; // 开始移动
  BuffType_StopMove     = 2; // 停止移动  移动停止
  BuffType_SetPos       = 3; // 直接移动到坐标
}

// 吟唱类型定义
enum SingingType{
  SingingType_Null = 0;
  SingingType_UseSkill = 1; // 使用技能
  SingingType_Revive   = 2; // 救人
}

// 错误码定义
enum SceneErrorCodeDef{
  SceneErrorCode_Success = 0; // 成功
  SceneErrorCode_InCD    = 1; // 技能处于CD中
  SceneErrorCode_Consume = 2; // 技能消耗不足
  SceneErrorCode_NoTarget= 3; // 没有目标
  SceneErrorCode_OutRect = 4; // 超出距离
  SceneErrorCode_NoFindEntity = 5; // 对象不存在
  SceneErrorCode_NoFindSkill = 6; // 技能不存在
  SceneErrorCode_TargetError = 7; // 目标错误
  SceneErrorCode_EntityIsDead = 8; // 目标已死亡
}

// -----------------------------------struct--------------------------------------------------------------

//游戏Proto结构体
message ScenePos{
  int32 x = 1;
  int32 y = 2;
}
message ScenePosList{
  repeated ScenePos pos_list =1;
}
// 一级属性
message AttributeFrist{
  int32 max_hp = 1;
  int32 hp = 2;
  int32 attack = 3;
  int32 defence = 4;
  int32 evade = 5;
  int32 cri = 6;
}

// 二级属性
message AttributeSecond{
  // 力量

  // 敏捷

}

// 三级属性
message AttributeThird{
  uint32 config_id = 1;
  int32 level = 2;
  int32 quality = 3;  
  uint32 move_speed = 4;
  int32 pos_x = 5;
  int32 pos_y = 6;
  int32 born_pos_x = 7;
  int32 born_pos_y = 8;  
  int32 character_id = 9; // 职业
  string nick_name = 10; // 昵称
  int32 dir = 11; // 方向
  int32 head_skin_id = 12; // 头像ID
  int32 skin_id = 13; // 角色ID 皮肤ID
  // 分组信息
  int32 team_id = 14;
  int32 group_id = 15;
  int32 tag = 16;
  // 
  int64 create_entity_id = 17;
  int64 create_time_tick = 18;
  int32 life_time_len = 19;  // 毫秒
  // 延迟创建时间
  int32 delay_create_time_len = 20;
}


// 属性信息
message CharacterAttribute{
  int64 state = 1; // 对应 EntityStateType 从低到高按位标记0表示没有这个状态，1表示有这个状态
  AttributeFrist first = 2;
  AttributeSecond second = 3;
  AttributeThird third = 4;
}

// 更新entity属性信息
message EntityAttributeValue{
  // 几级属性
  AttributeLevelType attribute_level_type = 1;
  // 属性类型 对应 AttributeFrist AttributeSecond AttributeThrid 枚举
  int32 attribute_type = 2;
  // 属性数值
  int64 attribute_int_value = 3;
  // 属性数值
  string attribute_string_value = 4;
}

// 场景对象信息
message SceneEntityData{
  // base info
  SceneEntityType type = 1;
  int64 entity_id = 2;
}

// 基础信息
message SceneCharacterData {
  SceneEntityData entity_data = 1;
  CharacterAttribute attribute = 2; // 属性信息

  
}

// 场景对象数据
message SceneStaticData{
  SceneEntityData entity_data = 1;
  int32 can_use = 2; // 是否可以交互
  
}

// entitys 
message SceneCharacterDatas {
  repeated SceneCharacterData character_datas = 1;
  repeated SceneStaticData static_datas = 2;
}

// 玩家信息
message ScenePlayerData{
  int64 player_id = 1;
  SceneCharacterData character_data = 2;
  // 背包数据

  // 技能数据

  // buff数据

  // 任务
}

message SceneEntitys {
  repeated SceneCharacterData character_list = 1; // 场景通用对象列表 npc/monster/boss/
  repeated SceneStaticData static_list = 2; // 场景通用对象列表 npc/monster/boss/
}

// 玩家离开场景

// 移动广播

// 数据更新

// 用于entity删除
message RemoveEntityNode{
  // 1.如果ID大于0则直接用ID进行删除
  int64 entity_id = 1; 
  // 2.分组信息 如果带有tag则使用tag进行区分
  int32 entity_type = 2;
  int32 group_id = 3;
  int32 team_id = 4;
  int32 tag = 5;
}
message RemoveEntitys{
  repeated RemoveEntityNode entitys = 1;
}



// 技能信息
message EntitySkillInfo{  
  int32 skill_config_id = 1;
  int32 skill_level = 2;
  int64 time_len = 3; // 冷却剩余时间
}
// buff信息
message EntityBuffInfo{
  int32 buff_config_id = 1;
  int64 src_entity_id = 2;
  int32 cur_count = 3; // 当前层数
  int64 begin_time = 4; // 开始时间 毫秒
  int32 life_time = 5; // 持续时间长度 毫秒
}

// 伤害广播
message DamageInfo{
  int64 entity_id = 1;
  int64 entity_src_id = 2;  
  int32 skill_config_id = 3; // 技能 伤害
  int32 buff_id = 4;  // buff 伤害
  bool is_dead = 5; // 是否死亡
  // 伤害数值 正为扣血 负为加血
  int32 damage_num = 6;
  // 是否暴击
  bool is_critical = 7;
  // 是否闪避
  bool is_evade = 8;
  int64 batch_id = 9; //技能批次id
}

